html, body {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  min-height: 100dvh; /* Dynamic viewport height */
  box-sizing: border-box;
  overflow-x: hidden; /* Prevent horizontal scrolling */
}

:root {
  --color-bg1: rgb(108, 0, 162);
  --color-bg2: rgb(0, 17, 82);
  --color-test: rgb(102, 58, 233);
  --color1: 22, 18, 255;
  --color2: 216, 131, 235;
  --color3: 97, 140, 234;
  --color4: 200, 50, 50;
  --color5: 180, 180, 50;
  --color-interactive: 102, 58, 233;
  --circle-size: 65%;
  --blending: hard-light;
}

@keyframes moveInCircle {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(180deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes moveVertical {
  0% {
    transform: translateY(-50%);
  }
  50% {
    transform: translateY(50%);
  }
  100% {
    transform: translateY(-50%);
  }
}

@keyframes moveHorizontal {
  0% {
    transform: translateX(-50%) translateY(-20%);
  }
  50% {
    transform: translateX(50%) translateY(10%);
  }
  100% {
    transform: translateX(-50%) translateY(-40%);
  }
}

.gradient-bg {
  width: 100%;
  height: 100%;
  min-height: 100dvh;
  position: fixed; /* Fixed position to ensure it covers everything */
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(40deg, var(--color-bg1), var(--color-bg2));
  overflow: hidden; /* Prevent content from spilling out */
  z-index: -1; /* Place behind other content */
}

/* SVG Filter */
.gradient-bg svg {
  position: fixed;
  top: 0;
  left: 0;
  width: 0;
  height: 0;
}

.gradient-bg .gradients-container {
  filter: url(#goo) blur(50px);
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.gradient-bg .g1 {
  position: absolute;
  background: radial-gradient(circle at center, rgba(var(--color1), 0.8) 0, rgba(var(--color1), 0) 50%) no-repeat;
  mix-blend-mode: var(--blending);

  width: var(--circle-size);
  height: var(--circle-size);
  top: calc(50% - var(--circle-size) / 2);
  left: calc(50% - var(--circle-size) / 2);

  transform-origin: center center;
  animation: moveVertical 30s ease infinite;

  opacity: 1;
}

.gradient-bg .g2 {
  position: absolute;
  background: radial-gradient(circle at center, rgba(var(--color2), 0.8) 0, rgba(var(--color2), 0) 50%) no-repeat;
  mix-blend-mode: var(--blending);

  width: var(--circle-size);
  height: var(--circle-size);
  top: calc(50% - var(--circle-size) / 2);
  left: calc(50% - var(--circle-size) / 2);

  transform-origin: calc(50% - 400px);
  animation: moveInCircle 20s reverse infinite;

  opacity: 1;
}

.gradient-bg .g3 {
  position: absolute;
  background: radial-gradient(circle at center, rgba(var(--color3), 0.8) 0, rgba(var(--color3), 0) 50%) no-repeat;
  mix-blend-mode: var(--blending);

  width: var(--circle-size);
  height: var(--circle-size);
  top: calc(50% - var(--circle-size) / 2 + 200px);
  left: calc(50% - var(--circle-size) / 2 - 500px);

  transform-origin: calc(50% + 400px);
  animation: moveInCircle 40s linear infinite;

  opacity: 1;
}

.gradient-bg .g4 {
  position: absolute;
  background: radial-gradient(circle at center, rgba(var(--color4), 0.8) 0, rgba(var(--color4), 0) 50%) no-repeat;
  mix-blend-mode: var(--blending);

  width: var(--circle-size);
  height: var(--circle-size);
  top: calc(50% - var(--circle-size) / 2);
  left: calc(50% - var(--circle-size) / 2);

  transform-origin: calc(50% - 200px);
  animation: moveHorizontal 40s ease infinite;

  opacity: 0.7;
}

.gradient-bg .g5 {
  position: absolute;
  background: radial-gradient(circle at center, rgba(var(--color5), 0.8) 0, rgba(var(--color5), 0) 50%) no-repeat;
  mix-blend-mode: var(--blending);

  width: calc(var(--circle-size) * 2);
  height: calc(var(--circle-size) * 2);
  top: calc(50% - var(--circle-size));
  left: calc(50% - var(--circle-size));

  transform-origin: calc(50% - 800px) calc(50% + 200px);
  animation: moveInCircle 20s ease infinite;

  opacity: 1;
}

.gradient-bg .interactive {
  position: fixed; /* Use fixed positioning */
  inset: 0; /* Cover entire viewport */
  pointer-events: none; /* Make it non-interactive */
  mix-blend-mode: var(--blending);
  opacity: 0.9;
  z-index: 1;
}

/* Additional styles for main content container */
#root {
  position: relative;
  min-height: 100dvh;
  width: 100%;
  z-index: 1;
}

// /* Media query for mobile devices */
// @media screen and (max-width: 768px) {
//   .gradient-bg, .gradient-bg .gradients-container {
//     height: 100dvh; /* Force dynamic viewport height */
//     min-height: -webkit-fill-available; /* For iOS Safari */
//   }
  
//   /* For iOS Safari */
//   html, body {
//     height: -webkit-fill-available;
//   }
// }